% latex foo.tex 
% dvips -Poutline -G0 foo.dvi -o 
% ps2pdf -dPDFSETTINGS#/prepress foo.ps
\documentclass[slidestop,xcolor=pst]{beamer}
\usepackage{etex}
\usepackage{fancyvrb}
\usepackage{hyperref}
%\usepackage{pstricks,pst-tree,pst-node,pst-plot,pst-3dplot}
\usepackage{graphicx}

\newcommand{\mygraph}[2]{\includegraphics[width=#1\textwidth]{figures/#2}}
\newcommand{\mygraphc}[2]{\centerline{\includegraphics[width=#1\textwidth]{figures/#2}}}

\newcommand{\sect}[1]{
\section{#1}
\begin{frame}[fragile]\frametitle{#1}
}

\newcommand{\bi}{\begin{itemize}}
\newcommand{\ei}{\end{itemize}}

\mode<presentation>
{
  \usetheme{Madrid}
  % or ...

%  \setbeamercovered{transparent}
  % or whatever (possibly just delete it)
}

\usepackage[english]{babel}

\usepackage[latin1]{inputenc}

\title[Computer Graphics, CSCI 480, Ray Tracing]
{
Ray Tracing
}

\subtitle{} % (optional)

\author[Geoffrey Matthews]
{Geoffrey Matthews}
% - Use the \inst{?} command only if the authors have different
%   affiliation.

\institute[WWU/CS]
{
  Department of Computer Science\\
  Western Washington University
}
% - Use the \inst command only if there are several affiliations.
% - Keep it simple, no one is interested in your street address.

\date{Fall 2015}

% If you have a file called "university-logo-filename.xxx", where xxx
% is a graphic format that can be processed by latex or pdflatex,
% resp., then you can add a logo as follows:

\pgfdeclareimage[height=0.5cm]{university-logo}{WWULogoProColor}
\logo{\pgfuseimage{university-logo}}

% If you wish to uncover everything in a step-wise fashion, uncomment
% the following command: 

%\beamerdefaultoverlayspecification{<+->}

\begin{document}


\begin{frame}
  \titlepage
\end{frame}

\sect{Ray Traced Images Achieve Maximal Realism}
\mygraph{1}{800px-Glasses_800_edit.png}
\end{frame}

\newcommand{\myref}[1]{\small\item\url{#1}}
\newcommand{\myreff}[1]{\scriptsize\item\url{#1}}


%\begin{frame}
%  \frametitle{Outline}
%  \tableofcontents
%  % You might wish to add the option [pausesections]
%\end{frame}
\sect{Two ways of rendering a picture: object order}
\mygraph{}{objectorderrendering.png}

\begin{itemize}
\item For each object in the world, find the colors it would put on the screen.
\end{itemize}
\end{frame}

\sect{Two ways of rendering a picture: image order}
\mygraph{}{imageorderrendering.png}
\begin{itemize}
\item For each pixel on the screen, find the objects that would color it.
\end{itemize}
\end{frame}

\sect{Ray casting, a simplified ray tracing}
\mygraph{}{imagecasting.png}
\begin{itemize}
\item Given an eye position and a pixel position, construct a ray.
\item Project the ray into the scene and find the closest intersection.
\item Use object to compute color.
\end{itemize}
\end{frame}

\sect{Camera}
\mygraph{.5}{camera01.png}
\begin{minipage}[b]{2.25in}
\begin{itemize}
\item A frame: {\bf origin} point, and {\bf right}, {\bf up}, {\bf forward} vectors.
\item A distance, width and height for the image plane.
\end{itemize}
\[ \langle p,r,u,f,d,w,h \rangle \]
\begin{itemize}
\item Would it matter if $d,w,h$ were all doubled?
\end{itemize}
\end{minipage}
\end{frame}

\sect{Finding vectors from the eye to the image plane}
\mygraph{.5}{mapping02.png}
\begin{minipage}[b]{2.25in}
\begin{itemize}
\item Give an expression for the upper left corner.
  \item Give an expression for the upper right corner.
\item Give an expression for a point 30\% of the way across the image
  plane and 10\% up from the bottom.
\end{itemize}
\end{minipage}

\[ \langle p,r,u,f,w,h \rangle \]
\end{frame}


\sect{Other camera representations}
\mygraph{.5}{camera01.png}
\begin{minipage}[b]{2.25in}
\begin{itemize}
\item Lookat:  eye point, lookat point, up vector, width, aspect ratio.
\item Eye and four points
\item Eye, lower left corner, two vectors
\item Eye and four vectors
\end{itemize}
\end{minipage}
\end{frame}


\sect{Normalized screen coordinates}
\mygraph{.35}{mapping01.png}\hfill
\mygraph{.35}{normalsquare.png}
\begin{itemize}
\item {\em Normalized} screen coordinates map the entire surface to
  the $(0,1)\times(0,1)$ square.
\item Suppose the screen is $640\times480$, with origin in the upper
  left, and we have a point at $(300,400)$ on the screen.
\item What are the point's normalized screen coordinates? \pause
  \[
  \left(\frac{300}{640}, 1-\frac{400}{480}\right)
  \]
  \pause
  \item Why did I use $s$ and $t$ and not $w$ and $h$?
\end{itemize}
\end{frame}

\sect{Mapping from Pixel to Camera Ray}
\mygraph{.4}{mapping01.png}
\hfill
\mygraph{.5}{mapping02.png}

\begin{itemize}
\item Given a pixel position on the screen, find the ray in the camera.
\item Map screen position to normalized position in $(0,1)\times(0,1)$
\item Map normalized position in $(0,1)\times(0,1)$ to vector in world space.
\end{itemize}
\end{frame}

\sect{Ray tracing process}
\bi
\item Input: a camera and a set of objects
\item Output: an image
\item For each pixel in the image:
  \bi
  \item Find the ray in the camera for that pixel.
  \item For all objects in the set:
    \bi
    \item find the closest in front of the camera that intersects the ray
    \ei
  \item Find the color of that object at the intersection point.
  \item Color the pixel in the image with that color.
  \ei
\ei
\end{frame}

\sect{Intersecting a ray and a sphere}
\mygraph{.9}{intersectingraysphere.png}
\begin{itemize}
  \item Sphere defined by center and radius.
\item Ray defined by point and vector.
\item Assume sphere is centered at origin (replace $p$ with $p-c$).
\item Equation to solve?
\pause
\item Solve for $t$:  $|p+tv|^2 = r^2$
\end{itemize}
\end{frame}

\sect{Solving quadratic}
\begin{eqnarray*}
|p+tv|^2 &=& (p+tv)\cdot(p+tv)\\
&=& \sum_i (p_i + tv_i)(p_i + tv_i)\\
&=& \sum_i \left(p_i^2 + 2p_iv_it + v_i^2t^2\right)\\
&=& \sum_i p_i^2 + 2\sum_ip_iv_it + \sum_iv_i^2t^2\\
&=& (p\cdot p) + 2(p\cdot v) t+ (v\cdot v) t^2
\end{eqnarray*}
So, in the quadratic $at^2 + bt + c = 0$,
\begin{eqnarray*}
a &=& v\cdot v \ \ \ (= 1 \mbox{~if you normalized your rays})\\
b &=& 2p\cdot v\\
c &=& p\cdot p - r^2
\end{eqnarray*}
\end{frame}

\sect{Intersecting a ray and a sphere}
\mygraph{}{intersectingraysphere.png}
\begin{itemize}
  \item What equation would we have to solve if we did this in world
    coordinates? 
\pause
\item $|(p+tv) - c|^2 = r^2$
\item Much simpler in object coordinates (replace $p$ with $p-c$).
\end{itemize}
\end{frame}


\sect{Shading}
\mygraph{0.5}{threespheresflat.png}
\mygraph{0.5}{threespheres.png}

Need to find three vectors:
\begin{itemize}
\item Surface normal
\item Vector toward eye
\item Vector toward light
\end{itemize}
\end{frame}

\sect{Spheres: finding the normal at a point}
\mygraphc{.5}{findingnormalonsphere.png}
\begin{itemize}
\item $n = p-c$
  \item May need to normalize (change to unit length).
\end{itemize}

\end{frame}

\sect{Spheres: finding the eye vector and the light vector}
\begin{itemize}
\item How do we find the vector pointing toward the eye?
\pause
\item (ray point) - (point on sphere) 
\pause
\item How do we find the vector pointing toward the light?
\pause
\item Depends on how lights are stored.
\item We will use {\em distant lights}, which simply store a vector
pointing in the direction of the light.
\end{itemize}
\end{frame}

\sect{Shading: Phong Reflection}

\mygraphc{1}{Phong_components_version_4.png}

\centerline{Ambient + Diffuse + Specular = Phong Reflection}

\pause
\begin{itemize}
\item A {\em phenomenological} model, not a {\em physical } one.
\end{itemize}


\end{frame}

\sect{The Ambient Term}
\mygraphc{1}{Phong_components_version_4.png}

\begin{itemize}
\item Light comes reflected and mixed from all objects in the environment.
\item Approximate this with a small amount of white light.
\item Without this we would get totally black shadows.
\end{itemize}
\end{frame}

\sect{The Diffuse Term}
\mygraphc{1}{Phong_components_version_4.png}
\end{frame}

\sect{The Diffuse Term:  Lambertian Reflection}

\mygraphc{0.5}{diffuseterm02.png}


\begin{itemize}
\item Objects with rough surfaces reflect light equally in all directions.
\item Light energy coming off surface in any direction will be
  proportional to the amount of light falling on the surface.
\end{itemize}
\end{frame}

\sect{The Diffuse Term:  Lambertian Reflection}

\mygraphc{}{diffuseterm.png}

\begin{itemize}
\item Light energy falling on a surface is proportional to the cosine
  of the angle of incidence of the light source.
\end{itemize}

\end{frame}

\sect{The Diffuse Term}
\mygraphc{1}{Phong_components_version_4.png}

\begin{itemize}
\item Therefore this term will be proportional to the cosine of the
  angle of incidence of the light source.
\end{itemize}
\end{frame}

\sect{The Specular Term}
\mygraphc{1}{Phong_components_version_4.png}
\end{frame}

\sect{The Specular Term}

\mygraph{}{specularterm.png}
\begin{itemize}
\item Smooth surfaces act a bit like mirrors.
\item Intensity of light will fall off more or less rapidly from the
  ideal (mirror) reflection vector.
\item How do you calculate the reflection vector?
\end{itemize}
\end{frame}

\sect{The Reflection Vector}
\mygraphc{}{reflectionvector.png}
\begin{itemize}
\item Assume all vectors are normalized, find $r$
\pause 
\item $r = \ell - 2(\ell - (n\cdot \ell)n)$
\pause
\item Use $\cos(\phi) = r\cdot e$
\end{itemize}
\end{frame}

\sect{Shininess}
\mygraphc{}{shininess.png}
\begin{itemize}
\item $\cos(x)^i$ for $i \in \{1,2,4,8,16,32\}$
\end{itemize}
\end{frame}

\sect{Specular reflection}
\mygraphc{.7}{specularballs.png}
\begin{itemize}
\item Specular coefficient in $(0.25, 0.5, 0.75)$
\item Shininess in $(3,9,200)$
\end{itemize}

\end{frame}

\sect{The Halfway Vector}
\mygraphc{.75}{halfwayvector.png}
\begin{itemize}
\item Use vector halfway between $e$ and $\ell$
\item If $n = h$, we get the brightest possible reflection.
\item Use $\cos(\beta) = h\cdot n$ for the falloff.
\item This angle $\beta$ is about half the angle $\phi$ found before.
\item We can adjust the shininess to handle that.
\end{itemize}
\end{frame}

\sect{The Halfway Vector}
\mygraphc{}{Blinn_phong_comparison.png}
\end{frame}


\sect{Add up all the terms}
\mygraphc{}{Phong_components_version_4.png}
\begin{eqnarray*}
I_p &=& k_a i_a + \sum_{m \in \mbox{lights}} (k_d(L_m\cdot N)i_{m,d}
                + k_s(R_m\cdot V)^\alpha i_{m,s})\\
\end{eqnarray*}
\end{frame}



\sect{Phong Reflection}

\begin{eqnarray*}
I_p &=& k_a i_a + \sum_{m \in \mbox{lights}} (k_d(L_m\cdot N)i_{m,d}
                + k_s(R_m\cdot V)^\alpha i_{m,s})\\
\\
i_a,i_s,i_d &=& \mbox{ambient, specular, diffuse light intensities}\\
k_a,k_s,k_d &=& \mbox{ambient, specular, diffuse reflection constants}\\
\alpha &=& \mbox{shininess}\\
L_m &=& \mbox{light vector}\\
N &=& \mbox{surface normal}\\
V &=& \mbox{viewer vector}\\
R &=& \mbox{light vector reflected about normal}\\
  &=& 2(L_m\cdot N)N - L_m
\end{eqnarray*}
\end{frame}


\sect{Phong examples}
\mygraphc{0.8}{phongexamples.png}
\end{frame}


\sect{Microfacets}

\mygraphc{.5}{microfacets.png}
\begin{itemize}
\item Assume a surface is made up of tiny mirrors.
\item The statistical distribution of these facets will determine the
  reflection in each direction.
\item More sophisticated models give better approximations to some
  surfaces than Phong reflection.
\end{itemize}

\end{frame}

\sect{Intersecting a ray and a plane}
\mygraphc{}{intersectingrayplane.png}
\begin{itemize}
\item Plane defined by point and normal.
\item Use same strategy?  What is the equation? \pause
\item Solve for $t$: $n \cdot ((p+tv)-q) = 0$
\end{itemize}
\end{frame}

\sect{Intersecting a ray and a plane}
\begin{eqnarray*}
 n\cdot (p+tv - q) &=& 0\\
n\cdot p + t(n\cdot v) - n\cdot q &=& 0\\
t(n\cdot v) + n\cdot(p-q) &=& 0 \\
t &=& \frac{n\cdot (q-p)}{n\cdot v}
\end{eqnarray*}
\begin{itemize}
\item The intersection point is $p + tv$
\pause\item But there's other ways.
\end{itemize}

\end{frame}

\sect{Intersecting a ray and a plane}
\mygraph{}{intersectingrayplane.png}
\begin{itemize}
\item
$v\cdot n < 0$ tests for intersection (one-sided plane).
\item
Need to find the distance from $p$ to intersection point.
\item Can we find the sides of the triangle?  What is the height?
\end{itemize}
\end{frame}


\sect{Intersecting a ray and a plane}
\mygraph{}{intersectingrayplane02.png}
\begin{itemize}
\item $h = (p-q)\cdot n$ gives us the height $h$ of $p$ from the plane.
\end{itemize}
\end{frame}


\sect{Intersecting a ray and a plane}
\mygraphc{}{intersectingrayplane03.png}
\begin{itemize}
\item Any ideas?
\end{itemize}
\end{frame}


\sect{Intersecting a ray and a plane}
\mygraph{}{intersectingrayplane04.png}
\begin{itemize}
\item $v\cdot -n = \cos{\theta}$
\end{itemize}
\end{frame}


\sect{Intersecting a ray and a plane}
\mygraph{}{intersectingrayplane05.png}
\begin{itemize}
\item $v\cdot -n$ gives us: $\cos{\theta} = 1/\sec{\theta}$
\end{itemize}
\end{frame}



\sect{Intersecting a ray and a plane}
\mygraph{}{intersectingrayplane06.png}

\[ t = h\sec(\theta) = \frac{h}{\cos{\theta}} = \frac{(q-p)\cdot n}{v\cdot n}\]

\begin{itemize}
\item Desired point is $p+tv$
\item The same result as the other method.
\end{itemize}
\end{frame}

\sect{Other primitives}
\begin{itemize}
\item Quadric surfaces:
\begin{itemize}
\item \url{http://en.wikipedia.org/wiki/Quadric}
\item \url{http://marctenbosch.com/photon/mbosch_intersection.pdf}
\end{itemize}
\item Torus
\begin{itemize}
\item\url{http://www.emeyex.com/site/projects/raytorus.pdf}
\end{itemize}
\item Metaballs
\begin{itemize}\item
\url{http://www.geisswerks.com/ryan/BLOBS/blobs.html}
\end{itemize}
\item Arbitrary shapes are approximated by unions of triangles
\item Intersect a single triangle:
\begin{itemize}
\item M\"oller-Trumbore
\item \url{http://www.cs.cornell.edu/courses/cs465/2003fa/homeworks/raytri.pdf}
\end{itemize}
\end{itemize}
\end{frame}


\sect{Many things can be done with just spheres}
\mygraphc{.75}{ring00.png}
\end{frame}

\sect{Many things can be done with just spheres}
\mygraphc{.75}{ring01.png}
\end{frame}

\sect{Many things can be done with just spheres}
\mygraphc{.75}{ring02.png}
\end{frame}

\sect{Many things can be done with just spheres}
\mygraphc{.75}{ring03.png}
\end{frame}

\sect{Random spheres}
\mygraphc{.75}{randomspheres32.png}
\end{frame}

\sect{Fog: depth cueing with distance}
\mygraphc{.75}{randomspheresgreyfog.png}
\end{frame}

\sect{Colored Fog for Effects}
\mygraphc{.75}{randomspheresbluefog.png}
\end{frame}

\sect{George de La Tour, St. Joseph}
\mygraphc{.5}{La_Tour.jpg}
\end{frame}

\sect{Gerrit Van Honthorst, de Koppelaarster}
\mygraphc{}{gerrit_van_honthorst_-_de_koppelaarster.jpg}
\end{frame}

\sect{Rembrandt World}
\mygraphc{.75}{rembrandtworld.png}
\end{frame}

\sect{A simple scene}
\mygraphc{.8}{simplescene.png}
\begin{itemize}
\pause
\item How do we get more than one color on an object?
\end{itemize}
\end{frame}


\sect{Textures and UV mapping}
\mygraphc{}{UVMapping.png}
\begin{itemize}
\item Need to map point on surface to point in image.
\end{itemize}
\end{frame}

\sect{2D and 3D mapping}
\mygraphc{.8}{UV_mapping_checkered_sphere.png}
\begin{itemize}
\item Can be {\em procedural} rather than image texture.
\end{itemize}
\end{frame}

\sect{A simple scene}
\mygraphc{0.8}{simplescene.png}
\begin{itemize}
\pause\item How did we get the shadow?
\end{itemize}
\end{frame}

\sect{Shadows}
\mygraphc{0.7}{shadowscene.png}
\begin{itemize}
\item Cast a ray from intersection to lights.
\item Do not need closest intersection, can quit after one.
\pause\item Colors in shadows?
\end{itemize}
\end{frame}

\sect{False Self-intersections}
\mygraphc{0.8}{speckles.png}
\begin{itemize}
\item Numeric problems with intersections.
\end{itemize}
\end{frame}

\sect{Noise texture}
\mygraphc{0.85}{noisescene.png}
\end{frame}

\sect{Alternate scene}
\mygraphc{0.85}{alternatescene.png}
\end{frame}

\sect{Noise texture bumpmapped}
\mygraphc{0.85}{bumpnoise.png}
\end{frame}

\sect{Aliasing}
\mygraphc{.7}{aliasingplot.png}

\begin{itemize}
\item Sample the black line at widely spaced gaps.

\item Smoothly connecting the samples gives a signal of a much longer
  wavelength. 
\item The high frequency signal is masquerading, or {\bf aliased} as a
  low frequency signal.
\item All computer graphics is done at {\bf pixels}, which are
  regularly spaced {\bf samples}.  {\em Pixels are not little squares!}
\item Aliasing is a constantly recurring problem in computer graphics.

\end{itemize}

\end{frame}

\sect{Aliasing in the simple scene}
\mygraphc{.5}{simplescene.png}

\begin{itemize}
\item Some visible artifacts
\begin{itemize}
\item Jaggies on the edge of the sphere.
\item Large patches of color on the ground.
\item New patterns in the distant clouds.
\end{itemize}

\item {Some solutions to aliasing}
\begin{itemize}
\item Sample at random points in pixel area.
\item Resample multiple points in the pixel area.
\end{itemize}
\end{itemize}
\end{frame}

\sect{Reflections:  Whitted Raytracing}
\mygraphc{0.8}{reflectionscene.png}
\end{frame}

\sect{Reflections: Recursion Limit}
\mygraphc{0.8}{reflection00.png}
\end{frame}

\sect{Reflections: Recursion Limit}
\mygraphc{0.8}{reflection01.png}
\end{frame}

\sect{Reflections: Recursion Limit}
\mygraphc{0.8}{reflection02.png}
\end{frame}

\sect{Reflections: Recursion Limit}
\mygraphc{0.8}{reflection03.png}
\end{frame}

\sect{Reflections: Recursion Limit}
\mygraphc{0.8}{reflection04.png}
\end{frame}

\sect{Reflections: Recursion Limit}
\mygraphc{0.8}{reflection05.png}
\end{frame}

\sect{Reflections: Recursion Limit}
\mygraphc{0.8}{reflection06.png}
\end{frame}


\sect{Refractions:  Whitted Raytracing}
\mygraphc{0.8}{refraction12.png}
\begin{itemize}
\pause \item What about shadows if the object is transparent?  Caustics?
\end{itemize}
\end{frame}

\sect{The Ray Tree}
\mygraphc{}{raytree.png}
\end{frame}

\sect{Speeding up ray tracing}
\begin{itemize}
\item Embarassingly parallel
\item Object partitioning
\end{itemize}
\end{frame}


\sect{\bf Readings}
\begin{itemize}
\myref{http://scratchapixel.com/lessons/3d-basic-lessons/lesson-1-writing-a-simple-raytracer/}
\myref{http://en.wikipedia.org/wiki/Ray_tracing_(graphics)}
\myref{http://www.cs.unc.edu/~rademach/xroads-RT/RTarticle.html}
\myref{http://en.wikipedia.org/wiki/Phong_lighting}
\myreff{http://www.wiziq.com/tutorial/162719-6-837-7-Ray-Tracing-Computer-Graphics}
\myreff{http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/}
\end{itemize}
{\bf Software:}
\begin{itemize}
\myref{http://pbrt.org/}
\myref{http://www.luxrender.net/en_GB/index}
\myref{http://www.povray.org/}
\myref{http://www.yafaray.org/}
\myref{http://radsite.lbl.gov/radiance/HOME.html}
\myref{http://www-graphics.stanford.edu/~cek/rayshade/rayshade.html}
\end{itemize}

\end{frame}

\end{document}
